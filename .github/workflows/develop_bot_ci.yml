name: Develop Branch Procharity Bot

on:
  pull_request:
    branches:
      - develop
    types: [closed]

  workflow_dispatch:

jobs:
  build_and_push_to_ghcr:
    name: Push Docker image to Github Container Registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      - name: Push Back to ghcr.io
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/procharity_bot_back:latest
      - name: Push Front to ghcr.io
        uses: docker/build-push-action@v2
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/procharity_bot_front:latest
      - name: Copy single file to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: docker-compose.test.yml
          remote: /code/docker-compose.test.yml
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.USER_DEV }}
          privateKey: ${{ secrets.SSH_KEY_DEV }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_ghcr
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.USER_DEV }}
          key: ${{ secrets.SSH_KEY_DEV }}
          script: |
            cd /code
            touch .env

            echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} > .env
            echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
            echo TOKEN=${{ secrets.TOKEN }} >> .env
            echo MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} >> .env
            echo MAIL_SERVER=${{ secrets.MAIL_SERVER }} >> .env
            echo MAIL_PORT=${{ secrets.MAIL_PORT }} >> .env
            echo MAIL_USE_TLS=${{ secrets.MAIL_USE_TLS }} >> .env
            echo MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} >> .env
            echo MAIL_DEFAULT_SENDER=${{ secrets.MAIL_DEFAULT_SENDER }} >> .env
            echo EMAIL_PROCHARRITY=${{ secrets.EMAIL_PROCHARRITY }} >> .env
            echo HOST_NAME=${{ secrets.HOST_NAME }} >> .env
            echo TOKEN_FOR_WEBHOOKS=${{ secrets.TOKEN_FOR_WEBHOOKS }} >> .env

            sudo docker-compose -f docker-compose.test.yml stop
            sudo docker-compose -f docker-compose.test.yml rm -f
            sudo docker-compose -f docker-compose.test.yml up -d --quiet-pull
            sudo docker-compose -f docker-compose.test.yml exec -d back alembic upgrade head
